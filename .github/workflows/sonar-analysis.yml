name: SonarQube Cloud

on:
  workflow_call:
    inputs:
      dotnet_version:
        description: '.NET version to use'
        required: true
        type: string

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Install SonarCloud scanner
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Install Coverlet Console
      run: dotnet tool install --global coverlet.console

    - name: Install project dependencies
      run: dotnet restore src/UniLx.sln

    - name: Test and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.sonar_token }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"AndrePostiga_cs-UniLx" /o:"andrepostiga" /d:sonar.token="${{ secrets.sonar_token }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=TestResults/coverage.opencover.xml
        
        dotnet build src/UniLx.ApiService/UniLx.ApiService.csproj
        dotnet build src/UniLx.Tests/UniLx.Tests.csproj

        coverlet src/UniLx.Tests/bin/Debug/net9.0/UniLx.Tests.dll \
          --target "dotnet" \
          --targetargs "test src/UniLx.Tests/UniLx.Tests.csproj --no-build" \
          --format opencover \
          --output TestResults/coverage.opencover.xml  

        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"